
<comment>
  The various prop (object) definitions are pretty self-explanatory, but a
  couple of notes:
  
  Allowable subtypes are:
    SUBTYPE_WALLING, SUBTYPE_FURNISH and SUBTYPE_DETAIL
    (Walls are usually for partitions/exteriors, furniture for interiors, and
    details for small objects that you want rendered on top of furniture.)
  
  Allowable blockLevels are:
    BLOCK_NONE, BLOCK_PARTIAL and BLOCK_FULL
    (How easily a character can move through the object.)
  
  Allowable blockSights are:
    true and false
    (Whether this blocks a character's vision.)
</comment>


<prop
  name       = "Floor"
  ID         = "civic_floor"
  sprite     = "floor_1.png"
  wide       = "1"
  high       = "1"
  subtype    = "SUBTYPE_WALLING"
  blockLevel = "BLOCK_NONE"
  blockSight = "false"
/>

<prop
  name       = "Wall"
  ID         = "civic_wall"
  sprite     = "wall_thin.png"
  wide       = "1"
  high       = "0"
  subtype    = "SUBTYPE_WALLING"
  blockLevel = "BLOCK_FULL"
  blockSight = "true"
/>

<prop
  name       = "Door"
  ID         = "civic_door"
  sprite     = "wall_thin_door.png"
  wide       = "1"
  high       = "0"
  subtype    = "SUBTYPE_WALLING"
  blockLevel = "BLOCK_NONE"
  blockSight = "true"
/>

<prop
  name       = "Window"
  ID         = "civic_window"
  sprite     = "wall_thin_window.png"
  wide       = "1"
  high       = "0"
  subtype    = "SUBTYPE_WALLING"
  blockLevel = "BLOCK_FULL"
  blockSight = "false"
/>



<prop
  name       = "Jewel Case"
  ID         = "civic_jewel_case"
  sprite     = "jeweller_case_1.png"
  wide       = "1"
  high       = "1"
  subtype    = "SUBTYPE_FURNISH"
  blockLevel = "BLOCK_FULL"
  blockSight = "false"
/>

<prop
  name       = "Jewel Case"
  ID         = "civic_jewel_case_long"
  sprite     = "jeweller_case_long.png"
  wide       = "1"
  high       = "2"
  subtype    = "SUBTYPE_FURNISH"
  blockLevel = "BLOCK_FULL"
  blockSight = "false"
/>

<prop
  name       = "Table"
  ID         = "civic_table"
  sprite     = "desk.png"
  wide       = "2"
  high       = "1"
  subtype    = "SUBTYPE_FURNISH"
  blockLevel = "BLOCK_FULL"
  blockSight = "false"
/>

<prop
  name       = "Chair"
  ID         = "civic_chair"
  sprite     = "black_chair_2.png"
  wide       = "1"
  high       = "1"
  subtype    = "SUBTYPE_FURNISH"
  blockLevel = "BLOCK_FULL"
  blockSight = "false"
/>


<comment>
  A scene is defined by it's name, ID, width, height (which are required) and
  object-types for the floor, wall, door and windows.
  
  Note:  walls, doors, windows and even the floor-type are optional (though you
  might get a crash if you try to add walls without a wall-type?)
  
  Fixed scenes define grids, including a map between index-numbers and object-
  types for furniture.  The grid then specifies contents for each x/y point
  within it's width and height.  (Each point should be separated by whitespace,
  but the amount doesn't matter.)
  
  Multiple grids can be specified for a given scene, to allow for multiple
  layers of objects.  (e.g, you could omit the default floor-type and lay out
  a floor-pattern using a grid instead.)
  
  
  Refer to an object in a given space by it's index.  Use n(orth), e(ast),
  s(outh) and w(est) to rotate an object by 0, 90, 180 or 270 degrees.
  
  If you want to leave a space blank, just leave a period (.)
  
  Note:  For objects more than 1 tile wide or high, you only need to mark the
  top-left corner of the object before rotation.  Other spaces the object might
  fill can be blank.
  
  Example 1:
    .  .  .
    .  2s 1
    .  .  .
    
    This will create a 3x3 area with an object of type 1 on the right and an
    object of type 2, rotated 180 degrees, in the middle.
  
  
  Use these characters to add walls/doors/windows to a particular space:
  Wall Left:    [
  Wall Bottom:  _
  Wall Right:   ]
  Wall Top:     -
  Window:       '
  Door:         /
  
  Example 2:
    [- -  -  -]
    [  1  .   ]'
    [  .  2e  ]/
    [_ _  _  _]
  
    This will create a walled-in 4x4 area with an object of type 1 toward the
    top-left corner, one of type 2 toward the bottom-right rotated by 90
    degrees, and a door and window on the right wall.
  
</comment>


<scene
  name   = "Jewelry Vault"
  ID     = "civic_scene_jewelry_vault"
  wide   = "6"
  high   = "6"
  floor  = "civic_floor"
  wall   = "civic_wall"
  door   = "civic_door"              
  window = "civic_window"
>
  <grid
    1 = "civic_jewel_case"
    2 = "civic_jewel_case_long"
  >
    [- -' -/ -  -  -]
    [  1s 2w .  1w  ]'
    [  2  .  .  2   ]/
    [/ .  .  .  .   ]
    [' 1e 2w .  1n  ]
    [_ _  _  _/ _' _]
  </grid>
</scene>


<scene
  name   = "General Seating"
  ID     = "civic_scene_general_seating"
  wide   = "6"
  high   = "6"
  floor  = "civic_floor"
  wall   = "civic_wall"
  door   = "civic_door"              
  window = "civic_window"
>
  <grid
    1 = "civic_table"
    2 = "civic_chair"
  >
    .  .  .  .  .  .
    .  2s 2s .  2s .
    .  1  .  .  1e .
    .  2  2  .  .  .
    .  .  .  .  2  .
    .  .  .  .  .  .
  </grid>
</scene>



<comment>
  This defines a composite scene.  Composite scenes are put together like
  jigsaws from other, smaller scenes, in a semi-random order.  You can specify
  units that reference another scene's ID, and add some parameters that control
  how often that unit will be used.
  
  Priorities allowed are:
    PRIORITY_HIGH, PRIORITY_MEDIUM, PRIORITY_LOW
    Units with high priority are added before units with low priority.
  
  Wall-policies allowed are:
    WALL_NONE, WALL_EXTERIOR, WALL_INTERIOR
    A unit with 'wall none' will have no walls added.  A unit with 'wall
    exterior' will have walls added only on the outside of the building.  And
    a unit with 'wall interior' will be surrounded with walls, even inside the
    building.
  
  'minCount' and 'maxCount' place upper/lower limits on how many of that unit
  will appear, and 'percent' specifies how many should appear as a fraction of
  total units.  You don't have to specify both.
  
  Note:  This part is still kind of experimental, so if you have any requests
  or complaints let me know.  (We could also skip it entirely if it's causing
  problems, and just use grid-based scenes for now.)
  
</comment>


<scene
  name           = "Civic Test Structure"
  ID             = "civic_test_structure"
  unitSize       = "6"
  maxUnitsAcross = "2"
  floor          = "civic_floor"
  wall           = "civic_wall"
  door           = "civic_door"              
  window         = "civic_window"
>
  <unit
    typeID   = "civic_scene_jewelry_vault"
    wall     = "WALL_INTERIOR"
    priority = "PRIORITY_HIGH"
    minCount = "1"
    maxCount = "2"
    percent  = "20"
  />
  <unit
    typeID   = "civic_scene_general_seating"
    wall     = "WALL_EXTERIOR"
    priority = "PRIORITY_LOW"
    percent  = "100"
  />
</scene>




